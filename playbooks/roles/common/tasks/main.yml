---

- name: Apply override settings, if available
  include_vars: /etc/rocknsm/config.yml

- name: Check for offline install
  stat:
    path: "{{ rock_cache_dir }}/{{ bro_rockscripts_filename }}"
  register: offline_files_present
  when: not rock_online_install

- name: Offline install fail
  fail:
    msg: 'You are installing in \Offline Mode\ but do not have all the files required.  Please install from a new RockNSM.iso!  '
  when: not rock_online_install and not offline_files_present.stat.exists

- name: Get OS specific settings
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

- name: 'Render rock_start template'
  template:
    backup: yes
    src: rock.target.j2
    dest: /etc/systemd/system/rock.target
    owner: root
    group: root
    mode: 0644

- name: 'Create rock.target.wants'
  file: path=/etc/systemd/system/rock.target.wants state=directory
  owner: root
  group: root
  mode: 0755

- name: 'Add systemd target wants symlinks'
  file:
    src: /usr/lib/systemd/system/{{ item }}
    dest: /etc/systemd/system/rock.target.wants/{{ item }}
    state: link
  with_items:
    - "{{ 'bro.service' if with_bro }}
    - "{{ 'snort.service' if with_snort }}"
    - "{{ 'kafka.service' if with_kafka }}"
    - "{{ 'lighttpd.service' if with_lighttpd }}"
    - "{{ 'harbor.service' if with_harbor }}"
    - "{{ 'docker.service' if with_docker }}"
    - "{{ 'elasticsearch.service' if with_elasticsearch }}"
    - "{{ 'zookeeper.service' if with_zookeeper }}"
    - "{{ 'logstash.service' if with_logstash }}"
    - "{{ 'portainer.service' if with_portainer }}"
    - "{{ 'kibana.service' if with_kibana }}"
    - "{{ 'suricata.service' if with_suricata }}"
    - "{{ 'stenographer.service' if with_stenographer }}"
    - "{{ 'fsf.service' if with_fsf }}"

- name: 'Check default runlevel'
  command: systemctl get-default
  register: runlevel

- name: 'Change default runlevel'
  command: systemctl set-default rock.target
  when: runlevel.stdout != "rock.target"

- name: 'Check current runlevel'
  command: systemctl is-active rock.target
  register: runlevel_active

- name: 'Switch to rock.target'
  command: systemctl isolate rock.target
  when: runlevel_active.stdout != "active"

######################################################
############### ROCKNSM Customization ################
######################################################
- name: Install ROCK NSM /etc/issue
  copy:
    src: etc-issue.in
    dest: /etc/issue.in
    mode: 0644
    owner: root
    group: root

- name: NetworkManager ROCK NSM hook
  copy:
    src: nm-issue-update
    dest: /etc/NetworkManager/dispatcher.d/50-rocknsm-issue-update
    mode: 0755
    owner: root
    group: root

# main.yml - Common tasks for ROCK
- include_tasks: configure_yum_repos.yml
- include_tasks: configure_rock_repo.yml
- include_tasks: install_common_packages.yml
- include_tasks: create_rock_directories.yml
- include_tasks: disable_ipv6.yml
- include_tasks: set_hostname.yml
- include_tasks: configure_ntp.yml
- include_tasks: ensure_cache_directory_exists.yml
- include_tasks: enable_firewall.yml
- include_tasks: install_chrony.yml
