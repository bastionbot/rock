######################################################
################ Configure Runlevel ##################
######################################################
---
- hosts: all
  tasks:
    - name: 'Set up services var'
      set_fact:
        services: []
        services: {{ services }} + {% [ 'bro' ] if with_bro %}
        - bro
      - {% if with_snort %}
        - "snort"
      - {% if with_kafka %}
        - "kafka"
      - {% if with_lighttpd %}
        - "lighttpd"
      - {% if with_harbor %}
        - "harbor"
      - {% if with_docker %}
        - "docker"
      - {% if with_docket %}
        - "docket"
      - {% if with_elasticsearch %}
        - "elasticsearch"
      - {% if with_zookeeper %}
        - "zookeeper"
      - {% if with_logstash %}
        - "logstash"
      - {% if with_portainer %}
        - "portainer"
      - {% if with_kibana %}
        - "kibana"
      - {% if with_suricata %}
        - "suricata"
      - {% if with_stenographer %}
        - "stenographer"
      - {% if with_fsf %}
        - "fsf"
    - debug:
        var: services

  - name: 'Render rock_start template'
    template:
      backup: yes
      src: rock.target.j2
      dest: /etc/systemd/system/rock.target
      owner: root
      group: root
      mode: 0644

  - name: 'Create rock.target.wants'
    file:
      path: /etc/systemd/system/rock.target.wants
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: 'Add systemd rock.target wants'
    file:
      src: "{{ lookup('first_found', dict(files=['/etc/systemd/system/' + item + '.service', '/usr/lib/systemd/system/' + item + '.service'], skip=true)) }}"
      dest: /etc/systemd/system/rock.target.wants/{{ item }}.service
      state: link
    dothing: "'with_' + {{ item }}"
    when: dothing
    with_items: "{{ services }}"
    ignore_errors: yes

  - name: 'Check default runlevel'
    command: systemctl get-default
    register: runlevel

  - name: 'Change default runlevel'
    command: systemctl set-default rock.target
    when: runlevel.stdout != "rock.target"

  - name: 'Check current runlevel'
    command: systemctl is-active rock.target
    register: runlevel_active
    failed_when: runlevel_active.rc != 3
    ignore_errors: yes

  - name: 'Switch to rock.target'
    command: systemctl isolate rock.target
    when: runlevel_active.stdout != "active"
